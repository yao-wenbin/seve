<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>io.github.yaowenbin</groupId>
    <artifactId>seve</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <modules>
        <module>seve-auth</module>
        <module>seve-common</module>
        <module>seve-gateway</module>
    </modules>

    <properties>
        <revision>1.0</revision>
        <java.version>17</java.version>
        <project.encoding>UTF-8</project.encoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring-boot.version>2.7.4</spring-boot.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>
        <hutool.version>5.8.11</hutool.version>
        <mybatis-plus.version>3.5.1</mybatis-plus.version>
        <mybatis-flex.version>1.4.7</mybatis-flex.version>
        <mysql-connector.version>8.0.22</mysql-connector.version>
        <page-helper.version>1.4.2</page-helper.version>
        <dinger.version>1.2.0</dinger.version>
        <fast-json.version>2.0.10</fast-json.version>
        <codec.vserion>1.2</codec.vserion>
        <lang.version>2.6</lang.version>
        <druid.version>1.2.8</druid.version>
        <groovy.vesrion>2.5.5</groovy.vesrion>
        <spring-doc.version>1.6.15</spring-doc.version>
        <sa-token.version>1.33.0</sa-token.version>
        <caffeine.version>3.1.1</caffeine.version>
        <mapstruct.version>1.5.3.Final</mapstruct.version>
        <bouncycastle.version>1.69</bouncycastle.version>
        <mockito.version>4.5.1</mockito.version>
        <rest-assured.version>4.5.1</rest-assured.version>
        <hamcrest.version>2.2</hamcrest.version>
        <aliyun-oss.vesrion>3.15.1</aliyun-oss.vesrion>
        <common-pool.version>2.11.1</common-pool.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.github.yaowenbin</groupId>
                <artifactId>seve-common</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>io.github.yaowenbin</groupId>
                <artifactId>seve-auth</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <!--Spring Doc instead of Swagger-->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${spring-doc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-data-rest</artifactId>
                <version>${spring-doc.version}</version>
            </dependency>

            <!-- ORM and DB -->
<!--            <dependency>-->
<!--                <groupId>com.baomidou</groupId>-->
<!--                <artifactId>mybatis-plus-boot-starter</artifactId>-->
<!--                <version>${mybatis-plus.version}</version>-->
<!--            </dependency>-->

            <dependency>
                <groupId>com.mybatis-flex</groupId>
                <artifactId>mybatis-flex-spring-boot-starter</artifactId>
                <version>${mybatis-flex.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${page-helper.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>mybatis-spring</artifactId>
                        <groupId>org.mybatis</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--Database End-->

            <!-- 测试相关 start -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <!-- 测试相关 end -->

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fast-json.version}</version>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <!-- 通用依赖 -->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- 一定要放在Lombok后面，否则会由于编译mapstruct后编译lombok导致缺少lombok生成的信息-->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
    </dependencies>


</project>
